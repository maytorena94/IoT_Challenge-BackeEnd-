from time import sleep
import pyupm_grove as grove
import pyupm_i2clcd as lcd
import pyupm_ttp223 as ttp223
import json
from pprint import pprint

with open('db.json') as data_file:
    data = json.load(data_file)

full_indicator = grove.GroveLed(5)
car_ammount = lcd.Jhd1313m1(0, 0x3E, 0x62)
car_ammount.setColor(255, 0, 0)
car_enter = grove.GroveButton(2)
car_exit = ttp223.TTP223(3)
car_counter = 0
car_limit = 0
car_ammount.setCursor(0,0)
car_ammount.write("Cars in Section:")
car_ammount.setCursor(1,7)
car_ammount.write(str(car_counter))

car_limit = data[0]["data"][1]["carLimit"]
car_counter = data[0]["data"][1]["currentCars"]

while True:
    if car_enter.value()==1 and car_counter!=car_limit:
        car_counter+=1
        data[0]["data"][1]["currentCars"] = car_counter
        json.dump(data, open("db.json",'w'))
    elif car_exit.isPressed()==1 and car_counter!=0:
        car_counter-=1
        data[0]["data"][1]["currentCars"]= car_counter
        json.dump(data, open("db.json",'w'))
    if car_counter>=0 and car_counter<car_limit:
        full_indicator.off()
        car_ammount.setCursor(0,0)
        car_ammount.write("                ")
        car_ammount.setCursor(0,0)
        car_ammount.write("Cars in Section:")
        car_ammount.setCursor(1,0)
        car_ammount.write("                ")
        car_ammount.setCursor(1,7)
        car_ammount.write(str(car_counter))
    elif car_counter>=car_limit:
        full_indicator.on()
        car_ammount.setCursor(0,0)
        car_ammount.write("                ")
        car_ammount.setCursor(0,2)
        car_ammount.write("Seccion Full")
        car_ammount.setCursor(1,0)
        car_ammount.write("                ")
        car_ammount.setCursor(1,0)
        car_ammount.write("!!!!!!!!!!!!!!!!")
    sleep(.2)
